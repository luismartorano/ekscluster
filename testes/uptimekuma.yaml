---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-uptimekuma
  namespace: uptimekuma
spec:
  storageClassName: gp2
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: uptimekuma-monitoring
  name: uptimekuma-monitoring
  namespace: uptimekuma
spec:
  selector:
    matchLabels:
      app: uptimekuma-monitoring
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: uptimekuma-monitoring
    spec:
      containers:
        - name: uptimekuma-monitoring
          image: louislam/uptime-kuma:1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3001
              name: tcp3001
              protocol: TCP
          volumeMounts:
            - mountPath: /app/data
              name: vol-uptimekuma
          livenessProbe:
            exec:
              command:
                - node
                - extra/healthcheck.js
            initialDelaySeconds: 180
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthcheck
              port: 3001
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      restartPolicy: Always
      volumes:
        - name: vol-uptimekuma
          persistentVolumeClaim:
            claimName: pvc-uptimekuma
---
apiVersion: v1
kind: Service
metadata:
  name: uptimekuma-monitoring-nodeport
  namespace: uptimekuma
spec:
  externalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: 3001tcp
      port: 3001
      protocol: TCP
      targetPort: 3001
  selector:
    app: uptimekuma-monitoring
  type: NodePort

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: uptimekuma-monitoring
  namespace: uptimekuma
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:284551195402:certificate/882c4eb4-f58c-4390-99f5-859c12dd4678
    alb.ingress.kubernetes.io/group.name: martorano-public
    #alb.ingress.kubernetes.io/group.name: vision.apps-public
    alb.ingress.kubernetes.io/healthcheck-path: /healthcheck
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-2016-08
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":
      { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/success-codes: 200-399
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
spec:
  rules:
    - host: uptime.martorano.dev
      http:
        paths:
          - backend:
              service:
                name: uptimekuma-monitoring-nodeport
                port:
                  number: 3001
            path: /
            pathType: Prefix